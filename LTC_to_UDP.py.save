import hid
import time
import socket

UDP_IP = "127.0.0.1" #Self
UDP_PORT = 3310 # OnAirScreen API Port

lastHours = 0;
lastMins = 0;
lastSeconds = 0;
lastFrames = 0;
frameRate = 0;
ticksAtFrameRate = 0;
ticks = 0;
goodFrames = 0;
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) #IP and UDP

LTCDevice = hid.Device(0x1dd2, 0x1033)
#LTCDevice.open(0x1dd2,0x1033)
#LTCDevice.set_nonblocking(True)

while True:
	invalid = 0
	try:
		tcBytes =  LTCDevice.read(64)
#		tcBytes =  (hid.Device(1452,545).read(64))
	except:
		print(hid.enumerate())
		print("Device Unavailable")
		break
	hours = tcBytes[0]
	mins = tcBytes[1]
	seconds = tcBytes[2]
	frames = tcBytes[3]

	if (frames >= frameRate):
		frameRate = frames + 1
	if (hours > 23 or mins > 59 or seconds > 59):
		print ("invalid time", tcBytes)

	if (frames == frameRate):
		ticksAtFrameRate += 1

	if (hours != lastHours and ((hours != (lastHours + 1) % 24) and mins != 0)):
		#print ("invalid time hours")
		invalid = 1
	if (mins != lastMins and ((hours != (lastMins + 1) % 60) and seconds != 0)):
		#print ("invalid time mins")
		invalid = 1
	if (seconds != lastSeconds and ((seconds != (lastSeconds + 1) % 60) and frames != 0)):
		#print ("invalid time seconds")
		invalid = 1


	lastHours = hours
	lastMins = mins
	lastSeconds = seconds

	if (invalid != 1):
		#Send Time Out
		goodFrames += 1
		#txt = "LTC_TIME:{:02d}:{:02d}:{:02d}:{:02d}"
		#txt = txt.format(hours, mins, seconds, frames)
		#print(txt)
		#sock.sendto(txt.encode('utf-8'), (UDP_IP, UDP_PORT))
	else:
		print ("Good frames in a row: ", goodFrames)
		goodFrames = 0		
	time.sleep((1 / frameRate) / 2)
